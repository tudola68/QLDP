//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLDP_02.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_QLDPEntities : DbContext
    {
        public DB_QLDPEntities()
            : base("name=DB_QLDPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DM_DP_DonViTinh> DM_DP_DonViTinh { get; set; }
        public virtual DbSet<DM_DP_LoaiSanPham> DM_DP_LoaiSanPham { get; set; }
        public virtual DbSet<DM_DP_LyDoCapPhat> DM_DP_LyDoCapPhat { get; set; }
        public virtual DbSet<DM_DP_NhaCungCap> DM_DP_NhaCungCap { get; set; }
        public virtual DbSet<DM_DP_Size> DM_DP_Size { get; set; }
        public virtual DbSet<DM_DP_TinhChatDongPhuc> DM_DP_TinhChatDongPhuc { get; set; }
        public virtual DbSet<DM_DP_TrangThaiDuyet> DM_DP_TrangThaiDuyet { get; set; }
        public virtual DbSet<NS_DP_GioiTinh> NS_DP_GioiTinh { get; set; }
        public virtual DbSet<NS_DP_PhieuDeNghi> NS_DP_PhieuDeNghi { get; set; }
        public virtual DbSet<NS_DP_PhieuDeNghi_CaNhan> NS_DP_PhieuDeNghi_CaNhan { get; set; }
        public virtual DbSet<NS_DP_PhieuDeNghi_CaNhan_ChiTiet> NS_DP_PhieuDeNghi_CaNhan_ChiTiet { get; set; }
        public virtual DbSet<NS_DP_PhieuDeNghi_ChiTiet> NS_DP_PhieuDeNghi_ChiTiet { get; set; }
        public virtual DbSet<NS_DP_PhieuNhapHang> NS_DP_PhieuNhapHang { get; set; }
        public virtual DbSet<NS_DP_PhieuNhapHang_ChiTiet> NS_DP_PhieuNhapHang_ChiTiet { get; set; }
        public virtual DbSet<NS_DP_SanPham> NS_DP_SanPham { get; set; }
        public virtual DbSet<NS_DP_SanPham_TinhChatDongPhuc> NS_DP_SanPham_TinhChatDongPhuc { get; set; }
        public virtual DbSet<NS_DP_XuatNhapKho> NS_DP_XuatNhapKho { get; set; }
        public virtual DbSet<NS_DP_XuatNhapKho_ChiTiet> NS_DP_XuatNhapKho_ChiTiet { get; set; }
        public virtual DbSet<NS_NhanSu> NS_NhanSu { get; set; }
        public virtual DbSet<DM_DP_Kho> DM_DP_Kho { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<getDanhSachSanPham_Result> getDanhSachSanPham()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDanhSachSanPham_Result>("getDanhSachSanPham");
        }
    
        public virtual ObjectResult<getPhieuNhapHang_Result> getPhieuNhapHang()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPhieuNhapHang_Result>("getPhieuNhapHang");
        }
    
        public virtual ObjectResult<getXuatNhapKho_Result> getXuatNhapKho()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getXuatNhapKho_Result>("getXuatNhapKho");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<getXuatKho_Result> getXuatKho()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getXuatKho_Result>("getXuatKho");
        }
    
        public virtual ObjectResult<getSize_Result> getSize()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSize_Result>("getSize");
        }
    }
}
